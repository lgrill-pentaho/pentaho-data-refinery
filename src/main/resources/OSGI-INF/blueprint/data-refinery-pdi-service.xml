<?xml version="1.0" encoding="UTF-8"?>
<!--

    Licensed to the Apache Software Foundation (ASF) under one or more
    contributor license agreements.  See the NOTICE file distributed with
    this work for additional information regarding copyright ownership.
    The ASF licenses this file to You under the Apache License, Version 2.0
    (the "License"); you may not use this file except in compliance with
    the License.  You may obtain a copy of the License at

        http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.
-->
<blueprint xmlns="http://www.osgi.org/xmlns/blueprint/v1.0.0"
           xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
           xmlns:pen="http://www.pentaho.com/xml/schemas/pentaho-blueprint"
           xmlns:cm="http://aries.apache.org/blueprint/xmlns/blueprint-cm/v1.1.0"
           xsi:schemaLocation="
            http://www.osgi.org/xmlns/blueprint/v1.0.0 http://www.osgi.org/xmlns/blueprint/v1.0.0/blueprint.xsd
            http://www.pentaho.com/xml/schemas/pentaho-blueprint http://www.pentaho.com/xml/schemas/pentaho-blueprint.xsd"
           default-timeout="20000">

  <cm:property-placeholder persistent-id="pentaho.geo.roles" update-strategy="reload" />

  <bean id="ModelAnnotation_StepData" class="org.pentaho.di.trans.steps.annotation.ModelAnnotationData" scope="prototype"/>

  <bean id="ModelAnnotation_StepMeta" class="org.pentaho.di.trans.steps.annotation.ModelAnnotationMeta" scope="prototype">
      <pen:di-plugin type="org.pentaho.di.core.plugins.StepPluginType">
          <pen:di-plugin-mapping class="org.pentaho.di.trans.step.StepDataInterface" ref="ModelAnnotation_StepData"/>
      </pen:di-plugin>
  </bean>

  <bean id="SharedDimension_StepMeta" class="org.pentaho.di.trans.steps.annotation.SharedDimensionMeta" scope="prototype">
      <pen:di-plugin type="org.pentaho.di.core.plugins.StepPluginType">
        <pen:di-plugin-mapping class="org.pentaho.di.trans.step.StepDataInterface" ref="ModelAnnotation_StepData"/>
      </pen:di-plugin>
  </bean>

  <bean id="BuildModel_JobEntry" class="org.pentaho.di.job.entries.build.JobEntryBuildModel" scope="prototype">
    <property name="modeler" ref="dswModeler"/>
    <pen:di-plugin type="org.pentaho.di.core.plugins.JobEntryPluginType" />
    <property name="dataServiceContext" ref="dataServiceContext"/>
  </bean>

  <bean id="dataServiceContext" class="org.pentaho.di.trans.dataservice.DataServiceContext" scope="singleton">
    <argument ref="pushDownFactories"/>
    <argument ref="autoOptimizationServices"/>
    <argument ref="cacheManager"/>
    <argument ref="uiFactory"/>
    <argument>
      <bean class="org.pentaho.di.core.logging.LogChannel">
        <argument value="Data Services"/>
      </bean>
    </argument>
  </bean>

  <reference-list id="pushDownFactories" interface="org.pentaho.di.trans.dataservice.optimization.PushDownFactory"
                  availability="optional"/>

  <reference-list id="autoOptimizationServices"
                  interface="org.pentaho.di.trans.dataservice.optimization.AutoOptimizationService"
                  availability="optional"/>

  <reference id="cacheManager" interface="org.pentaho.caching.api.PentahoCacheManager"/>

  <bean id="uiFactory" class="org.pentaho.di.trans.dataservice.ui.UIFactory" scope="singleton"/>

  <bean id="datasourcePublishService" class="org.pentaho.di.job.entries.publish.DatasourcePublishService">
    <argument>
      <bean class="org.pentaho.di.core.logging.LogChannel">
        <argument value="Data Source"/>
      </bean>
    </argument>
  </bean>
  <service interface="org.pentaho.di.job.entries.publish.PublishService" ref="datasourcePublishService" />

  <bean id="PublishModel_JobEntry" class="org.pentaho.di.job.entries.publish.JobEntryDatasourcePublish" scope="prototype">
    <argument ref="datasourcePublishService"/>
    <pen:di-plugin type="org.pentaho.di.core.plugins.JobEntryPluginType" />
  </bean>

  <bean id="dataRefineryTransFinished" scope="singleton" class="org.pentaho.di.core.refinery.extension.DataRefineryTransFinishListener"/>
  <bean id="dataRefineryTransFinishedPlugin" scope="singleton" class="org.pentaho.di.osgi.OSGIPlugin">
    <property name="mainType" value="org.pentaho.di.core.extension.ExtensionPointInterface"/>
    <property name="name" value="TransformationFinish"/>
    <property name="ID" value="DataRefineryTransFinishListener"/>
    <property name="description" value="Waits for the transformation to finish"/>
    <property name="pluginTypeInterface" value="org.pentaho.di.core.extension.ExtensionPointPluginType"/>
    <property name="category" value="Data Refinery"/>
    <property name="classToBeanMap">
      <map>
        <entry key="org.pentaho.di.core.extension.ExtensionPointInterface" value="dataRefineryTransFinished"/>
      </map>
    </property>
  </bean>
  <service id="dataRefineryTransFinishedPluginService" interface="org.pentaho.di.core.plugins.PluginInterface" ref="dataRefineryTransFinishedPlugin">
    <service-properties>
      <entry key="PluginType" value="org.pentaho.di.core.extension.ExtensionPointPluginType"/>
    </service-properties>
  </service>

  <bean id="geoContextProvider" scope="prototype" class="org.pentaho.di.core.refinery.model.GeoContextBlueprintConfigProvider">
    <property name="bundleContext" ref="blueprintBundleContext" />
  </bean>
  <service id="geoContextProviderService"
           interface="org.pentaho.agilebi.modeler.geo.GeoContextConfigProvider"
           ref="geoContextProvider"/>

  <bean id="dswModeler" scope="prototype" class="org.pentaho.di.core.refinery.model.DswModeler">
    <property name="geoContextConfigProvider" ref="geoContextProvider"/>
  </bean>

</blueprint>
